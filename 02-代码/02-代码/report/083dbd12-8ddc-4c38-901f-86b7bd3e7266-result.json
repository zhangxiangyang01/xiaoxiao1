{"name": "学院-增加-增加一条T001数据", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <scripts.test_departments.TestDepartment object at 0x000002857B3930C8>, case_id = 'add_001'\n\n    @pytest.mark.parametrize(\"case_id\", get_case_id(\"add\", 5))\n    def test_case_add(self, case_id):\n        # 1. 获取Excel表格中的数据\n        em = base_excel.get_item_with_case_id(case_id)\n        # 2. 处理前置\n        self.deal_fixture(em)\n        # 3. 发送请求\n        res = requests.post(self.BASE_URL + em.url, data=em.data.encode('utf-8'), headers=eval(em.headers))\n        # 4. 处理报告\n        add_description(res, em)\n        # 5. 断言\n>       assert_res(res, em)\n\nscripts\\test_departments.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>, em = <base.base_excel.ExcelModule object at 0x000002857B393708>\n\n    def assert_res(res, em):\n    \n        # 如果这个断言是自己调用的，则不进行后续的断言操作\n        if os.getcwd() in traceback.extract_stack()[-3][0]:\n            return\n    \n        if em.expect_way == \"json\":\n>           assert res.json() == json.loads(em.expect_res)\nE           AssertionError\n\nbase\\base_assert.py:12: AssertionError"}, "descriptionHtml": "<h1>Test with some complicated html description</h1>\n           <table style=\"width:100%\">\n             <tr>\n               <th>名称</th>\n               <th>值</th>\n             </tr>\n             \n                     <tr align=\"center\">\n                        <td>module_name</td>\n                        <td>学院-增加</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>case_id</td>\n                        <td>add_001</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>title</td>\n                        <td>增加一条T001数据</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>fixture</td>\n                        <td>T001在数据库中不存在</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>url</td>\n                        <td>/api/departments/</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>method</td>\n                        <td>POST</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>data</td>\n                        <td>{\n                \"data\": [\n                        {\n                            \"dep_id\":\"T001\",\n                            \"dep_name\":\"Test学院\",\n                            \"master_name\":\"Test-Masterx\"\n                        }\n                  ]\n            }</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>cookies</td>\n                        <td>{}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>headers</td>\n                        <td>{\"content-type\":\"application/json\"}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>expect_way</td>\n                        <td>json</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>expect_res</td>\n                        <td>{\n    \"already_exist\": {\n        \"count\": 0,\n        \"results\": []\n    },\n    \"create_success\": {\n        \"count\": 1,\n        \"results\": [\n            {\n                \"dep_id\": \"T001\",\n                \"dep_name\": \"Test学院\",\n                \"master_name\": \"Test-Masterx\",\n                \"slogan\": null\n            }\n        ]\n    }\n}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>desc</td>\n                        <td>None</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>actual_res</td>\n                        <td>{\"already_exist\":{\"count\":1,\"results\":[{\"dep_id\":\"T001\",\"dep_name\":\"Test学院\",\"master_name\":\"Test-Masterx\"}]},\"create_success\":{\"count\":0,\"results\":[]}}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>actual_status_code</td>\n                        <td>200</td>\n                     </tr>\n                   \n           </table>", "parameters": [{"name": "case_id", "value": "'add_001'"}], "start": 1639491444744, "stop": 1639491444783, "uuid": "276f7c40-9fac-4658-81f8-5259ab9b122f", "historyId": "006189544e7920b38416f0024fcf8796", "testCaseId": "c0686b4e1f19ddaaee2bbf227515d6bf", "fullName": "scripts.test_departments.TestDepartment#test_case_add", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_departments"}, {"name": "subSuite", "value": "TestDepartment"}, {"name": "host", "value": "DESKTOP-LSEEA95"}, {"name": "thread", "value": "15636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_departments"}]}