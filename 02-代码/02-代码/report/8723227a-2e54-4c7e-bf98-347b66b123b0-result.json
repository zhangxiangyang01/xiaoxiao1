{"name": "学院-查询-查询T002的数据", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <scripts.test_departments.TestDepartment object at 0x000002857B65D1C8>, case_id = 'query_002'\n\n    @pytest.mark.parametrize('case_id', get_case_id(\"query\", 5))\n    def test_case_query(self, case_id):\n        # 1. 获取Excel表格中的数据\n        em = base_excel.get_item_with_case_id(case_id)\n        # 2. 处理前置\n        self.deal_fixture(em)\n        # 3. 发送请求\n        res = requests.get(self.BASE_URL + em.url)\n        # 4. 处理报告\n        add_description(res, em)\n        # 5. 断言\n>       assert_res(res, em)\n\nscripts\\test_departments.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nres = <Response [200]>, em = <base.base_excel.ExcelModule object at 0x000002857B65DE08>\n\n    def assert_res(res, em):\n    \n        # 如果这个断言是自己调用的，则不进行后续的断言操作\n        if os.getcwd() in traceback.extract_stack()[-3][0]:\n            return\n    \n        if em.expect_way == \"json\":\n>           assert res.json() == json.loads(em.expect_res)\nE           AssertionError\n\nbase\\base_assert.py:12: AssertionError"}, "descriptionHtml": "<h1>Test with some complicated html description</h1>\n           <table style=\"width:100%\">\n             <tr>\n               <th>名称</th>\n               <th>值</th>\n             </tr>\n             \n                     <tr align=\"center\">\n                        <td>module_name</td>\n                        <td>学院-查询</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>case_id</td>\n                        <td>query_002</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>title</td>\n                        <td>查询T002的数据</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>fixture</td>\n                        <td>add_002</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>url</td>\n                        <td>/api/departments/T002/</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>method</td>\n                        <td>GET</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>data</td>\n                        <td>None</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>cookies</td>\n                        <td>{}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>headers</td>\n                        <td>{}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>expect_way</td>\n                        <td>json</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>expect_res</td>\n                        <td>{\n    \"dep_id\": \"T002\",\n    \"dep_name\": \"Test学院\",\n    \"master_name\": \"Test-Masterx\",\n    \"slogan\": null\n}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>desc</td>\n                        <td>None</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>actual_res</td>\n                        <td>{\"dep_id\":\"T002\",\"dep_name\":\"Test学院xxx\",\"master_name\":\"Test-Masterx\",\"slogan\":null}</td>\n                     </tr>\n                   \n                     <tr align=\"center\">\n                        <td>actual_status_code</td>\n                        <td>200</td>\n                     </tr>\n                   \n           </table>", "parameters": [{"name": "case_id", "value": "'query_002'"}], "start": 1639491445269, "stop": 1639491445335, "uuid": "c34e98ec-cc9d-4bfc-af7d-4b64a158804c", "historyId": "1006d2d63ae9440c14195a4d4df84f86", "testCaseId": "be6659ba4d18de88d8a79b2f37eabb66", "fullName": "scripts.test_departments.TestDepartment#test_case_query", "labels": [{"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_departments"}, {"name": "subSuite", "value": "TestDepartment"}, {"name": "host", "value": "DESKTOP-LSEEA95"}, {"name": "thread", "value": "15636-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_departments"}]}